#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:teste-security
spring.application.name=crud-gratitude-servicos
#spring.jpa.properties.hibernate.format_sql=true
#
server.error.include-message=always
#server.error.include-binding-errors=always

#spring.jpa.defer-datasource-initialization=true
# --- LINHA CORRIGIDA ---
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://127.0.0.1:3306/capacita?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DATABASE_USER:capacita_app}}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DATABASE_PASSWORD:#Gfcapacita123}}

spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${DATABASE_USER:capacita_app}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${DATABASE_PASSWORD:#Gfcapacita123}}


spring.datasource.initialization-mode=always
server.port=8080
## Disabled automatic DDL changes to avoid startup failures when database contains
## inconsistent data (e.g. tentativa rows referencing missing matricula rows).
## Manage schema changes manually and re-enable this only when the schema/data
## are consistent.
spring.jpa.hibernate.ddl-auto=none
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always


# Configuração para garantir a execução ordenada dos scripts SQL
spring.sql.init.schema-locations=classpath:Database/Script.sql
spring.sql.init.data-locations=classpath:data.sql


# tempo de expiração do token em milissegundos (esse valor indica que ele vai expirar em 1 hora)
jwt.validity=3600000
# palavra passe do token (segredo) necessita de no minimo 32 caracteres e serve para assinar e verificar os tokens, sendo recomendável usar uma chave complexa e difícil de adivinhar para aumentar a segurança da aplicação
jwt.secret=RXhpc3RlIHVtYSB0ZW9yaWEgcXVlIGRpeiBxdWUsIHNlIHVtIGRpYSBhbGd16W0gZGVzY29icmlyIGV4YXRhbWVudGUgcGFyYSBxdWUgc2VydmUgbyBVbml2ZXJzbyBlIHBvciBxdWUgZWxlIGVzdOEgYXF1aSwgZWxlIGRlc2FwYXJlY2Vy4SBpbnN0YW50YW5lYW1lbnRlIGUgc2Vy4SBzdWJzdGl0de1kbyBwb3IgYWxnbyBhaW5kYSBtYWlzIGVzdHJhbmhvIGUgaW5leHBsaWPhdmVsLiBFeGlzdGUgdW1hIHNlZ3VuZGEgdGVvcmlhIHF1ZSBkaXogcXVlIGlzc28gauEgYWNvbnRlY2V1Li4u
#
aws.s3.bucket.bronze=gratitude-bronze-zd4ol4kv
aws.s3.bucket.silver=gratitude-silver-sfl5azsu
aws.s3.bucket.gold=gratitude-gold-sfl5azsu
aws.s3.region=us-east-1
aws.accessKeyId=${AWS_ACCESS_KEY_ID:test}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY:test}
spring.main.banner-mode=off
logging.level.root=WARN
logging.level.org.springframework=WARN
logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.filter=OFF
logging.level.org.springframework.security=OFF
logging.level.org.springframework.security.web=OFF
logging.level.org.springframework.security.web.authentication=OFF
logging.level.org.springframework.security.authentication=OFF
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF
logging.level.servicos.gratitude=ERROR

# Disable Open-Session-in-View to avoid lazy-loading during view rendering
# and the warning about it. This forces data access to happen inside
# transactional boundaries and prevents accidental lazy loads in controllers.
spring.jpa.open-in-view=false

# Multipart upload limits (increase to allow image uploads without 413 errors)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=25MB

# ========== RabbitMQ Configuration ==========
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USER:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST:/}

# ========== Email Configuration ==========
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:seu-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:sua-senha}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# ========== RabbitMQ Queue Configuration ==========
rabbitmq.queue.notificacao=notificacao-cursos-lancados
rabbitmq.exchange.notificacao=exchange.notificacoes
rabbitmq.routing.key.notificacao=routing.notificacao.cursos