name: CI/CD Oceann

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      # 2. Configurar ambiente Java/Maven
      - name: BE - Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # 3. Gerar o artefato .jar
      - name: BE - Gerar Artefato .JAR
        run: mvn clean package -DskipTests=true
        working-directory: ./

      # 4. Renomear JAR
      - name: BE - Renomear JAR para app_loko.jar
        run: |
          set -e
          JAR_NAME=$(ls target/*.jar | head -n 1)
          mv "$JAR_NAME" target/app_loko.jar
          echo "Renomeado para: target/app_loko.jar"
        working-directory: ./

      # 5. Enviar o .jar para o servidor remoto via SSH + rsync
      - name: BE - Copiar JAR para /usr/share/api (rsync com sudo remoto)
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_KEY }}   # <-- seu secret
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /usr/share/api/
          SOURCE: "./target/app_loko.jar"
          ARGS: "-rltgoDzvO --delete --rsync-path=\"sudo mkdir -p /usr/share/api && sudo rsync\""

      # 6. Reiniciar o serviço Spring Boot
      - name: BE - Reiniciar serviço Spring Boot
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}   # mesmo secret reutilizado
          script: |
            set -e
            echo "Reiniciando serviço spring-app..."
            sudo systemctl restart spring-app
            sudo systemctl status spring-app --no-pager
            echo "Spring Boot reiniciado com sucesso!"
