name: Deploy Backend to DigitalOcean

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite executar manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Build with Maven
        run: mvn clean package -DskipTests
      
      - name: Upload JAR to GitHub Release
        run: |
          echo "JAR построен: $(ls -lh target/*.jar)"
          JAR_FILE=$(ls target/*.jar | head -n 1)
          echo "JAR_PATH=$JAR_FILE" >> $GITHUB_ENV
      
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            echo "=== Iniciando deploy no Droplet ==="
            
            # Parar o serviço Spring Boot
            echo "Parando serviço..."
            sudo systemctl stop spring-app.service
            
            # Fazer backup do JAR atual
            if [ -f /opt/app/app.jar ]; then
              echo "Fazendo backup do JAR atual..."
              sudo cp /opt/app/app.jar /opt/app/app.jar.backup-$(date +%Y%m%d-%H%M%S)
            fi
            
            # Baixar novo JAR do GitHub Release
            echo "Baixando novo JAR do GitHub..."
            sudo wget -O /opt/app/app.jar https://github.com/GrupoSeis-2CCO/be-gratitude-capacita/releases/download/NEW/be-gratitude-capacita-0.0.1-SNAPSHOT.jar
            
            # Ajustar permissões
            sudo chown ubuntu:ubuntu /opt/app/app.jar
            sudo chmod +x /opt/app/app.jar
            
            # Reiniciar o serviço
            echo "Reiniciando serviço..."
            sudo systemctl start spring-app.service
            
            # Aguardar alguns segundos e verificar status
            sleep 5
            sudo systemctl status spring-app.service
            
            echo "=== Deploy concluído! ==="
      
      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            echo "=== Verificando saúde do serviço ==="
            
            # Verificar se o serviço está rodando
            if sudo systemctl is-active --quiet spring-app.service; then
              echo "✅ Serviço está rodando"
            else
              echo "❌ ERRO: Serviço não está rodando!"
              sudo journalctl -u spring-app.service -n 50
              exit 1
            fi
            
            # Verificar se a porta 8081 está ouvindo
            if sudo netstat -tulpn | grep :8081 > /dev/null; then
              echo "✅ Porta 8081 está ouvindo"
            else
              echo "⚠️ AVISO: Porta 8081 não está ouvindo (pode estar iniciando)"
            fi
            
            # Mostrar logs recentes
            echo "=== Últimos logs do serviço: ==="
            sudo journalctl -u spring-app.service -n 20 --no-pager
